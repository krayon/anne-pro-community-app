package com.obins.anne.utils;

import android.support.v4.internal.view.SupportMenu;
import android.support.v4.media.TransportMediator;
import android.support.v4.view.MotionEventCompat;

public class CRC16 {
    static byte[] crc16_tab_h;
    static byte[] crc16_tab_l;

    static {
        r0 = new byte[256];
        crc16_tab_h = r0;
        r0 = new byte[256];
        r0[1] = (byte) -64;
        r0[2] = (byte) -63;
        r0[3] = (byte) 1;
        r0[4] = (byte) -61;
        r0[5] = (byte) 3;
        r0[6] = (byte) 2;
        r0[7] = (byte) -62;
        r0[8] = (byte) -58;
        r0[9] = (byte) 6;
        r0[10] = (byte) 7;
        r0[11] = (byte) -57;
        r0[12] = (byte) 5;
        r0[13] = (byte) -59;
        r0[14] = (byte) -60;
        r0[15] = (byte) 4;
        r0[16] = (byte) -52;
        r0[17] = (byte) 12;
        r0[18] = (byte) 13;
        r0[19] = (byte) -51;
        r0[20] = (byte) 15;
        r0[21] = (byte) -49;
        r0[22] = (byte) -50;
        r0[23] = (byte) 14;
        r0[24] = (byte) 10;
        r0[25] = (byte) -54;
        r0[26] = (byte) -53;
        r0[27] = (byte) 11;
        r0[28] = (byte) -55;
        r0[29] = (byte) 9;
        r0[30] = (byte) 8;
        r0[31] = (byte) -56;
        r0[32] = (byte) -40;
        r0[33] = (byte) 24;
        r0[34] = (byte) 25;
        r0[35] = (byte) -39;
        r0[36] = (byte) 27;
        r0[37] = (byte) -37;
        r0[38] = (byte) -38;
        r0[39] = (byte) 26;
        r0[40] = (byte) 30;
        r0[41] = (byte) -34;
        r0[42] = (byte) -33;
        r0[43] = (byte) 31;
        r0[44] = (byte) -35;
        r0[45] = (byte) 29;
        r0[46] = (byte) 28;
        r0[47] = (byte) -36;
        r0[48] = (byte) 20;
        r0[49] = (byte) -44;
        r0[50] = (byte) -43;
        r0[51] = (byte) 21;
        r0[52] = (byte) -41;
        r0[53] = (byte) 23;
        r0[54] = (byte) 22;
        r0[55] = (byte) -42;
        r0[56] = (byte) -46;
        r0[57] = (byte) 18;
        r0[58] = (byte) 19;
        r0[59] = (byte) -45;
        r0[60] = (byte) 17;
        r0[61] = (byte) -47;
        r0[62] = (byte) -48;
        r0[63] = (byte) 16;
        r0[64] = (byte) -16;
        r0[65] = (byte) 48;
        r0[66] = (byte) 49;
        r0[67] = (byte) -15;
        r0[68] = (byte) 51;
        r0[69] = (byte) -13;
        r0[70] = (byte) -14;
        r0[71] = (byte) 50;
        r0[72] = (byte) 54;
        r0[73] = (byte) -10;
        r0[74] = (byte) -9;
        r0[75] = (byte) 55;
        r0[76] = (byte) -11;
        r0[77] = (byte) 53;
        r0[78] = (byte) 52;
        r0[79] = (byte) -12;
        r0[80] = (byte) 60;
        r0[81] = (byte) -4;
        r0[82] = (byte) -3;
        r0[83] = (byte) 61;
        r0[84] = (byte) -1;
        r0[85] = (byte) 63;
        r0[86] = (byte) 62;
        r0[87] = (byte) -2;
        r0[88] = (byte) -6;
        r0[89] = (byte) 58;
        r0[90] = (byte) 59;
        r0[91] = (byte) -5;
        r0[92] = (byte) 57;
        r0[93] = (byte) -7;
        r0[94] = (byte) -8;
        r0[95] = (byte) 56;
        r0[96] = (byte) 40;
        r0[97] = (byte) -24;
        r0[98] = (byte) -23;
        r0[99] = (byte) 41;
        r0[100] = (byte) -21;
        r0[101] = (byte) 43;
        r0[102] = (byte) 42;
        r0[103] = (byte) -22;
        r0[104] = (byte) -18;
        r0[105] = (byte) 46;
        r0[106] = (byte) 47;
        r0[107] = (byte) -17;
        r0[108] = (byte) 45;
        r0[109] = (byte) -19;
        r0[110] = (byte) -20;
        r0[111] = (byte) 44;
        r0[112] = (byte) -28;
        r0[113] = (byte) 36;
        r0[114] = (byte) 37;
        r0[115] = (byte) -27;
        r0[116] = (byte) 39;
        r0[117] = (byte) -25;
        r0[118] = (byte) -26;
        r0[119] = (byte) 38;
        r0[120] = (byte) 34;
        r0[121] = (byte) -30;
        r0[122] = (byte) -29;
        r0[123] = (byte) 35;
        r0[124] = (byte) -31;
        r0[125] = (byte) 33;
        r0[TransportMediator.KEYCODE_MEDIA_PLAY] = (byte) 32;
        r0[TransportMediator.KEYCODE_MEDIA_PAUSE] = (byte) -32;
        r0[128] = (byte) -96;
        r0[129] = (byte) 96;
        r0[130] = (byte) 97;
        r0[131] = (byte) -95;
        r0[132] = (byte) 99;
        r0[133] = (byte) -93;
        r0[134] = (byte) -94;
        r0[135] = (byte) 98;
        r0[136] = (byte) 102;
        r0[137] = (byte) -90;
        r0[138] = (byte) -89;
        r0[Msgprotocol.BLE_ACK_CURRENT_HOST_QUERY] = (byte) 103;
        r0[Msgprotocol.BLE_ACK_COMP_MODE] = (byte) -91;
        r0[141] = (byte) 101;
        r0[142] = (byte) 100;
        r0[143] = (byte) -92;
        r0[144] = (byte) 108;
        r0[145] = (byte) -84;
        r0[146] = (byte) -83;
        r0[147] = (byte) 109;
        r0[148] = (byte) -81;
        r0[149] = (byte) 111;
        r0[150] = (byte) 110;
        r0[151] = (byte) -82;
        r0[152] = (byte) -86;
        r0[153] = (byte) 106;
        r0[154] = (byte) 107;
        r0[155] = (byte) -85;
        r0[156] = (byte) 105;
        r0[157] = (byte) -87;
        r0[158] = (byte) -88;
        r0[159] = (byte) 104;
        r0[160] = (byte) 120;
        r0[161] = (byte) -72;
        r0[162] = (byte) -71;
        r0[163] = (byte) 121;
        r0[164] = (byte) -69;
        r0[165] = (byte) 123;
        r0[166] = (byte) 122;
        r0[167] = (byte) -70;
        r0[168] = (byte) -66;
        r0[169] = (byte) 126;
        r0[170] = Byte.MAX_VALUE;
        r0[171] = (byte) -65;
        r0[172] = (byte) 125;
        r0[173] = (byte) -67;
        r0[174] = (byte) -68;
        r0[175] = (byte) 124;
        r0[176] = (byte) -76;
        r0[177] = (byte) 116;
        r0[178] = (byte) 117;
        r0[179] = (byte) -75;
        r0[180] = (byte) 119;
        r0[181] = (byte) -73;
        r0[182] = (byte) -74;
        r0[183] = (byte) 118;
        r0[184] = (byte) 114;
        r0[185] = (byte) -78;
        r0[186] = (byte) -77;
        r0[187] = (byte) 115;
        r0[188] = (byte) -79;
        r0[189] = (byte) 113;
        r0[190] = (byte) 112;
        r0[191] = (byte) -80;
        r0[192] = (byte) 80;
        r0[193] = (byte) -112;
        r0[194] = (byte) -111;
        r0[195] = (byte) 81;
        r0[196] = (byte) -109;
        r0[197] = (byte) 83;
        r0[198] = (byte) 82;
        r0[199] = (byte) -110;
        r0[200] = (byte) -106;
        r0[201] = (byte) 86;
        r0[202] = (byte) 87;
        r0[203] = (byte) -105;
        r0[204] = (byte) 85;
        r0[205] = (byte) -107;
        r0[206] = (byte) -108;
        r0[207] = (byte) 84;
        r0[208] = (byte) -100;
        r0[209] = (byte) 92;
        r0[210] = (byte) 93;
        r0[211] = (byte) -99;
        r0[212] = (byte) 95;
        r0[213] = (byte) -97;
        r0[214] = (byte) -98;
        r0[215] = (byte) 94;
        r0[216] = (byte) 90;
        r0[217] = (byte) -102;
        r0[218] = (byte) -101;
        r0[219] = (byte) 91;
        r0[220] = (byte) -103;
        r0[221] = (byte) 89;
        r0[222] = (byte) 88;
        r0[223] = (byte) -104;
        r0[224] = (byte) -120;
        r0[225] = (byte) 72;
        r0[226] = (byte) 73;
        r0[227] = (byte) -119;
        r0[228] = (byte) 75;
        r0[229] = (byte) -117;
        r0[230] = (byte) -118;
        r0[231] = (byte) 74;
        r0[232] = (byte) 78;
        r0[233] = (byte) -114;
        r0[234] = (byte) -113;
        r0[235] = (byte) 79;
        r0[236] = (byte) -115;
        r0[237] = (byte) 77;
        r0[238] = (byte) 76;
        r0[239] = (byte) -116;
        r0[240] = (byte) 68;
        r0[241] = (byte) -124;
        r0[242] = (byte) -123;
        r0[243] = (byte) 69;
        r0[244] = (byte) -121;
        r0[245] = (byte) 71;
        r0[246] = (byte) 70;
        r0[247] = (byte) -122;
        r0[248] = (byte) -126;
        r0[249] = (byte) 66;
        r0[250] = (byte) 67;
        r0[251] = (byte) -125;
        r0[252] = (byte) 65;
        r0[253] = (byte) -127;
        r0[254] = Byte.MIN_VALUE;
        r0[MotionEventCompat.ACTION_MASK] = (byte) 64;
        crc16_tab_l = r0;
    }

    public static int calcCrc16(byte[] data) {
        return calcCrc16(data, 0, data.length);
    }

    public static int calcCrc16(byte[] data, int offset, int len) {
        return calcCrc16(data, offset, len, SupportMenu.USER_MASK);
    }

    public static int calcCrc16(byte[] data, int offset, int len, int preval) {
        int ucCRCHi = (MotionEventCompat.ACTION_POINTER_INDEX_MASK & preval) >> 8;
        int ucCRCLo = preval & MotionEventCompat.ACTION_MASK;
        for (int i = 0; i < len; i++) {
            int iIndex = (data[offset + i] ^ ucCRCLo) & MotionEventCompat.ACTION_MASK;
            ucCRCLo = ucCRCHi ^ crc16_tab_h[iIndex];
            ucCRCHi = crc16_tab_l[iIndex];
        }
        return ((ucCRCHi & MotionEventCompat.ACTION_MASK) << 8) | ((ucCRCLo & MotionEventCompat.ACTION_MASK) & SupportMenu.USER_MASK);
    }
}
